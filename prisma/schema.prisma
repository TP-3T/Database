datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

model Player {
  id                   Int         @id @default(autoincrement())
  userName             String
  currentBalance       Float
  moneyEarned          Float?
  moneyLost            Float?
  ownedTiles           Tile[]
  buildings            Building[] 
  tileChanges          TileChange[]
}

model Game {
  id          Int         @id @default(autoincrement())
  worldId     Int         @unique
  world       World       @relation(fields: [worldId], references: [id])
  turns       Turn[]
}

model World {
  id              Int      @id @default(autoincrement())
  pollutionLevel  Int
  seaLevel        Int
  temperature     Int
  year            DateTime
  map             Map?
  game            Game?
  @@map("worlds")
}

model Map {
  id              Int      @id @default(autoincrement())
  worldId         Int      @unique
  world           World    @relation(fields: [worldId], references: [id])
  tiles           Tile[]
}

model BuildingBase {
  id                  Int               @id @default(autoincrement())
  type                BuildingType      @unique  // static data for each category
  category            BuildingCategory
  costWorkers         Int?              // worker costs
  costMoney           Float?
  pollutionProduced   Int?              // per turn
  populationProduced  Int?
  moneyProduced       Float?            // per turn
  buildings           Building[]
  tileChanges         TileChange[]
}

model Building {
  id              Int               @id @default(autoincrement())
  buildingBaseId  Int
  buildingBase    BuildingBase      @relation(fields: [buildingBaseId], references: [id])
  ownerId         Int?
  owner           Player?           @relation(fields: [ownerId], references: [id])
  tileId          Int?              @unique
  tile            Tile?             @relation(fields: [tileId], references: [id])
  upgradeLevel    Int               @default(1)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model Tile {
  id            Int           @id @default(autoincrement())
  x_coordinate  Int
  y_coordinate  Int
  building      Building?
  tileType      TileType      @default(PLAINS)
  elevation     Int
  label         String?
  ownerId        Int?          
  owner         Player?       @relation(fields: [ownerId], references: [id])
  mapId         Int      
  map           Map           @relation(fields: [mapId], references: [id])
  changes       TileChange[]
  @@unique([mapId, x_coordinate, y_coordinate])
}

model Turn {
  id            Int              @id @default(autoincrement())
  number        Int
  gameId        Int       
  game          Game             @relation(fields: [gameId], references: [id])
  worldChanges  WorldChange[]
  tileChanges   TileChange[]
}

model WorldChange {
  id              Int       @id @default(autoincrement())
  pollutionLevel  Int?
  seaLevel        Int?
  temperature     Int?
  year            DateTime?
  turnId          Int       
  turn            Turn      @relation(fields: [turnId], references: [id])
}

model TileChange {
  id            Int             @id @default(autoincrement())
  buildingId    Int?
  building      BuildingBase?   @relation(fields: [buildingId], references: [id])
  tileType      TileType?
  elevation     Int?
  label         String?
  ownerId       Int?
  owner         Player?         @relation(fields: [ownerId], references: [id])
  turnId        Int       
  turn          Turn            @relation(fields: [turnId], references: [id])
  tileId        Int       
  tile          Tile            @relation(fields: [tileId], references: [id])
}

enum BuildingCategory {
  INDUSTRIAL
  POWER
  UTILITY
}

enum BuildingType {
  // Industrial
  LUMBERMILL
  MINE
  FARM
  DOCK
  HARBOR
  // Power
  COAL
  HYDRO_DAM
  TIDAL
  WIND
  NUCLEAR
  // utility
  SEA_WALL
  PUMP 
}

enum TileType {
  BARREN
  RIVER
  PLAINS
  FOREST
  SNOW
  SWAMP
  DESERT
  MOUNTAIN
  LAKE
}
